@page "/logout"
@using DUPSS.Web.Components.Service
@using Microsoft.AspNetCore.Components.Authorization
@inject Supabase.Client SupabaseClient
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Logging Out</PageTitle>

<div class="container mt-4 text-center">
    <h3>Logging out...</h3>
    <p>Please wait while we sign you out.</p>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Sign out from Supabase
            await SupabaseClient.Auth.SignOut();

            // Update authentication state
            if (AuthStateProvider is CustomAuthStateProvider customAuth)
            {
                await customAuth.SignOutAsync();
            }

            // Redirect to login page
            NavigationManager.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            // Log error (in production, use proper logging)
            Console.WriteLine($"Logout error: {ex.Message}");
            // Still redirect to avoid hanging
            NavigationManager.NavigateTo("/login", forceLoad: true);
        }
    }
}