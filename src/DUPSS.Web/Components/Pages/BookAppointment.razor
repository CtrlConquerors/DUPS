@page "/BookAppointment"
@using DUPSS.API.Models.AccessLayer.Interfaces
@using DUPSS.Web.Components.Service
@using DUPSS.API.Models.DTOs
@using DUPSS.Web.Components.Service
@inject AppointmentApiService AppointmentService
@inject UserApiService UserService
@inject NavigationManager Navigation

<h3>Đặt lịch hẹn với tư vấn viên</h3>

@if (consultants == null)
{
    <p>Đang tải danh sách tư vấn viên...</p>
}
else
{
    <EditForm Model="newAppointment" OnValidSubmit="HandleBooking">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Chọn tư vấn viên</label>
            <select class="form-select" @bind="newAppointment.ConsultantId">
                <option value="">-- Chọn tư vấn viên --</option>
                @foreach (var consultant in consultants)
                {
                    <option value="@consultant.UserId">@consultant.Username</option>
                }
            </select>
        </div>

        <div class="mb-3">
            <label class="form-label">Ngày hẹn</label>
            <InputDate @bind-Value="newAppointment.AppointmentDate" class="form-control" />
        </div>

        <div class="mb-3">
            <label class="form-label">Chủ đề</label>
            <InputText class="form-control" @bind-Value="newAppointment.Topic" />
        </div>

        <div class="mb-3">
            <label class="form-label">Ghi chú (tuỳ chọn)</label>
            <InputTextArea class="form-control" @bind-Value="newAppointment.Notes" />
        </div>

        <button class="btn btn-primary" type="submit">Đặt lịch</button>
    </EditForm>
}

@code {
    private List<UserDTO>? consultants;
    private AppointmentDTO newAppointment = new()
        {
            AppointmentId = Guid.NewGuid().ToString(),
            MemberId = "",
            ConsultantId = "",
            AppointmentDate = DateOnly.FromDateTime(DateTime.Today.AddDays(1)),
            Status = "Pending",
            Topic = ""
        };

    protected override async Task OnInitializedAsync()
    {
        consultants = await UserService.GetConsultantsAsync();
        var currentUserId = await AppointmentService.GetCurrentUserIdAsync();
        if (!string.IsNullOrEmpty(currentUserId))
        {
            newAppointment.MemberId = currentUserId;
        }
    }

    private async Task HandleBooking()
    {
        var success = await AppointmentService.CreateAppointmentAsync(newAppointment);
        if (success)
        {
            Navigation.NavigateTo("/Appointment");
        }
        else
        {
      
            Console.WriteLine("Failed to create appointment.");
        }
    }
}
