@page "/debug"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider

<h3>User Debug Info</h3>

<button class="btn btn-secondary" @onclick="GetUserInfo">Refresh</button>

@if (claims == null)
{
    <p>Loading user info...</p>
}
else if (!claims.Any())
{
    <p>No user is authenticated.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Type</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var claim in claims)
            {
                <tr>
                    <td>@claim.Type</td>
                    <td>@claim.Value</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<System.Security.Claims.Claim>? claims;

    protected override async Task OnInitializedAsync()
    {
        await GetUserInfo();
    }

    private async Task GetUserInfo()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        claims = user.Identity != null && user.Identity.IsAuthenticated ? user.Claims : Enumerable.Empty<System.Security.Claims.Claim>();
        StateHasChanged();
    }
}

