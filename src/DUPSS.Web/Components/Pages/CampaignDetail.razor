@page "/Campaign/Detail/{CampaignId}"
@using DUPSS.API.Models.DTOs
@using DUPSS.Web.Components.Service
@inject CampaignApiService CampaignApiService
@inject NavigationManager NavigationManager


@if (campaign == null)
{
    <p>Loading campaign details...</p>
}
else
{
    <div class="campaign-detail-container">
        <img src="@campaign.ImageUrl" alt="Campaign Image" style="max-width: 400px; margin-bottom: 20px;" />

        <div class="info-row"><label>Title:</label><span>@campaign.Title</span></div>
        <div class="info-row"><label>Location:</label><span>@campaign.Location</span></div>
        <div class="info-row"><label>Status:</label><span>@campaign.Status</span></div>
        <label>Phase:</label>
        <span>
            @campaign.StartDate.ToString("dd/MM/yyyy")
            –
            @(campaign.EndDate?.ToString("dd/MM/yyyy") ?? "N/A")
        </span>

        <div class="campaign-section">
            <h3>Introduction</h3>
            <div>@((MarkupString)campaign.Introduction.Replace("\n", "<br />"))</div>
        </div>





    </div>

    <Footer />
}

@code {
    [Parameter]
    public string CampaignId { get; set; } = string.Empty;

    private CampaignDTO? campaign;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            campaign = await CampaignApiService.GetByIdAsync(CampaignId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading campaign detail: {ex.Message}");
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/Campaign");
    }
}
